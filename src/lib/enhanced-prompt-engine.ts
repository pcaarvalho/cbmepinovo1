// AIDEV-EXPLANATION: Motor de prompts superinteligente para IA do CBMEPI
// Implementa estrat√©gias avan√ßadas de prompt engineering para respostas de alta qualidade

import { extractKeywords } from './prompt-utils';
import { logIA } from '../shared/log/logger';

/**
 * Tipos de consulta para otimiza√ß√£o de prompt
 */
enum QueryType {
  NORMATIVA = 'normativa',           // Consultas sobre ITs espec√≠ficas
  APLICACAO = 'aplicacao',           // Como aplicar uma norma
  DIMENSIONAMENTO = 'dimensionamento', // C√°lculos e dimensionamentos
  CONFORMIDADE = 'conformidade',     // An√°lise de conformidade
  MEMORIAL = 'memorial',             // Memorial descritivo
  EMERGENCIAL = 'emergencial',       // Quest√µes urgentes/cr√≠ticas
  COMPARATIVA = 'comparativa',       // Compara√ß√£o entre normas
  INTERPRETATIVA = 'interpretativa'  // Interpreta√ß√£o de texto normativo
}

/**
 * Contexto enriquecido para gera√ß√£o de prompts
 */
interface EnhancedContext {
  queryType: QueryType;
  keywords: string[];
  itReferences: string[];
  userProfile?: 'profissional' | 'estudante' | 'proprietario' | 'bombeiro';
  urgencyLevel: 'baixa' | 'media' | 'alta' | 'critica';
  previousContext?: string;
  specificDomain?: string;
}

/**
 * Templates de system prompts otimizados por tipo
 */
const SYSTEM_PROMPT_TEMPLATES: Record<QueryType, string> = {
  [QueryType.NORMATIVA]: `Voc√™ √© um especialista s√™nior em Instru√ß√µes T√©cnicas do Corpo de Bombeiros do Piau√≠ com 20 anos de experi√™ncia. 
Seu papel √© fornecer interpreta√ß√µes precisas e detalhadas das normas, sempre citando artigos, par√°grafos e itens espec√≠ficos.
Estruture suas respostas com: Base Legal detalhada, Aplicabilidade Pr√°tica com exemplos, Alertas T√©cnicos importantes e Refer√™ncias Oficiais.
Use linguagem t√©cnica apropriada mas clara. Seja extremamente preciso com n√∫meros, medidas e especifica√ß√µes.`,

  [QueryType.APLICACAO]: `Voc√™ √© um engenheiro de seguran√ßa contra inc√™ndio experiente, especializado na aplica√ß√£o pr√°tica das ITs do CBMEPI.
Forne√ßa orienta√ß√µes passo a passo sobre como implementar as normas em situa√ß√µes reais.
Inclua: procedimentos detalhados, materiais necess√°rios, pontos de aten√ß√£o, erros comuns e boas pr√°ticas.
Use exemplos concretos e casos t√≠picos do Piau√≠. Considere as particularidades clim√°ticas e construtivas locais.`,

  [QueryType.DIMENSIONAMENTO]: `Voc√™ √© um calculista especializado em sistemas de prote√ß√£o contra inc√™ndio conforme normas do CBMEPI.
Apresente c√°lculos detalhados, f√≥rmulas aplic√°veis, par√¢metros de projeto e fatores de seguran√ßa.
Sempre cite a IT espec√≠fica, tabelas e anexos utilizados. Mostre o desenvolvimento completo dos c√°lculos.
Considere varia√ß√µes e casos especiais. Indique software ou ferramentas recomendadas quando aplic√°vel.`,

  [QueryType.CONFORMIDADE]: `Voc√™ √© um auditor t√©cnico do CBMEPI especializado em an√°lise de conformidade de projetos.
Avalie criteriosamente cada aspecto apresentado contra as ITs vigentes.
Identifique: conformidades, n√£o-conformidades, pontos de aten√ß√£o e recomenda√ß√µes de adequa√ß√£o.
Use checklist mental completo. Seja rigoroso mas construtivo. Sugira solu√ß√µes para cada problema identificado.`,

  [QueryType.MEMORIAL]: `Voc√™ √© um projetista especializado em elabora√ß√£o de memoriais descritivos para o CBMEPI.
Oriente sobre estrutura, conte√∫do obrigat√≥rio, n√≠vel de detalhamento e apresenta√ß√£o adequada.
Forne√ßa templates, exemplos de reda√ß√£o e dicas para aprova√ß√£o r√°pida.
Destaque os erros mais comuns que levam a exig√™ncias ou reprova√ß√£o.`,

  [QueryType.EMERGENCIAL]: `Voc√™ √© um oficial bombeiro experiente respondendo a uma consulta urgente sobre seguran√ßa contra inc√™ndio.
Seja direto, claro e priorize a seguran√ßa. Indique a√ß√µes imediatas e medidas provis√≥rias aceit√°veis.
Ap√≥s resolver o urgente, oriente sobre regulariza√ß√£o definitiva conforme ITs do CBMEPI.
Em situa√ß√µes de risco iminente, recomende evacua√ß√£o e acionamento do 193.`,

  [QueryType.COMPARATIVA]: `Voc√™ √© um pesquisador especializado em normas de seguran√ßa contra inc√™ndio, expert nas ITs do CBMEPI.
Compare sistematicamente diferentes normas, vers√µes ou requisitos.
Use tabelas comparativas quando apropriado. Destaque diferen√ßas cr√≠ticas e implica√ß√µes pr√°ticas.
Contextualize historicamente as mudan√ßas quando relevante.`,

  [QueryType.INTERPRETATIVA]: `Voc√™ √© um jurista especializado em direito administrativo e normas t√©cnicas do CBMEPI.
Interprete o texto normativo considerando: literalidade, finalidade, sistem√°tica e razoabilidade.
Cite jurisprud√™ncia administrativa quando existente. Considere o esp√≠rito da norma e a seguran√ßa como princ√≠pio.
Em casos amb√≠guos, apresente interpreta√ß√µes poss√≠veis e recomende a mais segura.`
};

/**
 * Identifica o tipo de consulta baseado no conte√∫do
 * @param pergunta - Pergunta do usu√°rio
 * @param keywords - Palavras-chave extra√≠das
 * @returns Tipo de consulta identificado
 */
function identifyQueryType(pergunta: string, keywords: string[]): QueryType {
  const perguntaLower = pergunta.toLowerCase();
  
  // AIDEV-EXPLANATION: Padr√µes para identificar tipo de consulta
  if (/como (calcular|dimensionar)|c√°lculo|dimensionamento|quantidade|capacidade/i.test(pergunta)) {
    return QueryType.DIMENSIONAMENTO;
  }
  
  if (/como (aplicar|implementar|instalar|executar)|passo a passo|procedimento/i.test(pergunta)) {
    return QueryType.APLICACAO;
  }
  
  if (/conformidade|est√° (correto|adequado)|an√°lise|verificar|validar/i.test(pergunta)) {
    return QueryType.CONFORMIDADE;
  }
  
  if (/memorial|descritivo|documenta√ß√£o|projeto|art|rrt/i.test(pergunta)) {
    return QueryType.MEMORIAL;
  }
  
  if /(urgente|emerg√™ncia|risco|perigo|imediato)/i.test(pergunta)) {
    return QueryType.EMERGENCIAL;
  }
  
  if (/(comparar|diferen√ßa|versus|melhor|ou)/i.test(pergunta)) {
    return QueryType.COMPARATIVA;
  }
  
  if (/(o que significa|interpretar|entender|explicar)/i.test(pergunta)) {
    return QueryType.INTERPRETATIVA;
  }
  
  // Default: consulta normativa
  return QueryType.NORMATIVA;
}

/**
 * Detecta n√≠vel de urg√™ncia da consulta
 * @param pergunta - Pergunta do usu√°rio
 * @returns N√≠vel de urg√™ncia
 */
function detectUrgency(pergunta: string): 'baixa' | 'media' | 'alta' | 'critica' {
  const perguntaLower = pergunta.toLowerCase();
  
  if (/urgente|emerg√™ncia|imediato|agora|socorro|perigo|risco (iminente|grave)/i.test(pergunta)) {
    return 'critica';
  }
  
  if (/r√°pido|hoje|amanh√£|prazo|vencendo|notifica√ß√£o/i.test(pergunta)) {
    return 'alta';
  }
  
  if (/breve|semana|preciso|necessito/i.test(pergunta)) {
    return 'media';
  }
  
  return 'baixa';
}

/**
 * Extrai refer√™ncias a ITs mencionadas
 * @param texto - Texto para an√°lise
 * @returns Array de ITs mencionadas
 */
function extractITReferences(texto: string): string[] {
  const itPattern = /\b(?:IT[- ]?(\d{1,3})|Instru√ß√£o T√©cnica[- ]?(\d{1,3}))\b/gi;
  const matches = [...texto.matchAll(itPattern)];
  
  return [...new Set(matches.map(m => {
    const num = (m[1] || m[2]).padStart(3, '0');
    return `IT-${num}`;
  }))];
}

/**
 * Gera contexto enriquecido para o prompt
 * @param pergunta - Pergunta do usu√°rio
 * @param historico - Hist√≥rico de conversa√ß√£o (opcional)
 * @returns Contexto enriquecido
 */
export function generateEnhancedContext(
  pergunta: string,
  historico?: string[]
): EnhancedContext {
  const keywords = extractKeywords(pergunta);
  const queryType = identifyQueryType(pergunta, keywords);
  const urgencyLevel = detectUrgency(pergunta);
  const itReferences = extractITReferences(pergunta);
  
  // AIDEV-SUGGESTION: An√°lise de dom√≠nio espec√≠fico
  let specificDomain: string | undefined;
  const domainPatterns = {
    'edifica√ß√µes residenciais': /residencial|casa|apartamento|condom√≠nio/i,
    'edifica√ß√µes comerciais': /loja|com√©rcio|shopping|mercado/i,
    'ind√∫strias': /ind√∫stria|f√°brica|galp√£o industrial/i,
    'eventos': /evento|show|festa|concentra√ß√£o/i,
    'educacional': /escola|faculdade|universidade|creche/i,
    'sa√∫de': /hospital|cl√≠nica|posto de sa√∫de|upa/i,
    'combust√≠veis': /posto de gasolina|glp|g√°s|combust√≠vel/i
  };
  
  for (const [domain, pattern] of Object.entries(domainPatterns)) {
    if (pattern.test(pergunta)) {
      specificDomain = domain;
      break;
    }
  }
  
  return {
    queryType,
    keywords,
    itReferences,
    urgencyLevel,
    specificDomain,
    previousContext: historico?.slice(-2).join('\n')
  };
}

/**
 * Gera prompt otimizado para IA superinteligente
 * @param pergunta - Pergunta do usu√°rio
 * @param context - Contexto enriquecido
 * @returns Prompt otimizado
 */
export function generateSuperPrompt(
  pergunta: string,
  context: EnhancedContext
): { systemPrompt: string; userPrompt: string } {
  // AIDEV-EXPLANATION: Seleciona system prompt baseado no tipo
  let systemPrompt = SYSTEM_PROMPT_TEMPLATES[context.queryType];
  
  // Enriquece com contexto espec√≠fico
  if (context.specificDomain) {
    systemPrompt += `\n\nATEN√á√ÉO: Esta consulta √© espec√≠fica para ${context.specificDomain}. 
Considere as particularidades e requisitos especiais deste tipo de ocupa√ß√£o conforme ITs do CBMEPI.`;
  }
  
  if (context.urgencyLevel === 'critica') {
    systemPrompt += `\n\nüö® CONSULTA URGENTE: Priorize seguran√ßa e a√ß√µes imediatas. 
Seja direto e objetivo. Indique claramente o que fazer AGORA e o que regularizar depois.`;
  }
  
  // AIDEV-EXPLANATION: Constr√≥i prompt do usu√°rio com contexto
  let userPrompt = '';
  
  // Adiciona contexto hist√≥rico se existir
  if (context.previousContext) {
    userPrompt += `[CONTEXTO DA CONVERSA ANTERIOR]\n${context.previousContext}\n\n`;
  }
  
  // Adiciona ITs relevantes se mencionadas
  if (context.itReferences.length > 0) {
    userPrompt += `[ITs MENCIONADAS: ${context.itReferences.join(', ')}]\n\n`;
  }
  
  // Pergunta principal
  userPrompt += `PERGUNTA: ${pergunta}\n\n`;
  
  // Instru√ß√µes espec√≠ficas por tipo
  switch (context.queryType) {
    case QueryType.DIMENSIONAMENTO:
      userPrompt += `Por favor, apresente os c√°lculos de forma detalhada, incluindo:
- Dados de entrada e premissas
- F√≥rmulas utilizadas com refer√™ncia √† IT
- Memorial de c√°lculo passo a passo
- Resultado final com unidades
- Verifica√ß√µes e fatores de seguran√ßa aplicados`;
      break;
      
    case QueryType.CONFORMIDADE:
      userPrompt += `Analise a conformidade considerando:
- Requisitos normativos aplic√°veis (cite ITs e artigos)
- Avalia√ß√£o item por item
- Identifica√ß√£o clara de conformidades e n√£o-conformidades
- Recomenda√ß√µes espec√≠ficas para adequa√ß√£o
- Prioriza√ß√£o das corre√ß√µes necess√°rias`;
      break;
      
    case QueryType.MEMORIAL:
      userPrompt += `Oriente sobre o memorial descritivo incluindo:
- Estrutura e se√ß√µes obrigat√≥rias
- N√≠vel de detalhamento necess√°rio
- Documentos complementares
- Dicas para evitar exig√™ncias comuns
- Exemplo de reda√ß√£o quando aplic√°vel`;
      break;
      
    default:
      userPrompt += `Estruture sua resposta seguindo o padr√£o:
üß† Base Legal - com cita√ß√£o espec√≠fica de ITs e artigos
üìå Aplicabilidade Pr√°tica - como implementar na pr√°tica
‚ö†Ô∏è Alerta T√©cnico - pontos de aten√ß√£o importantes
üìÑ Refer√™ncia Oficial - ITs completas para consulta`;
  }
  
  // Log para an√°lise
  logIA('Prompt superinteligente gerado', {
    model: 'enhanced-engine',
    promptLength: userPrompt.length,
    responseTime: 0
  });
  
  return { systemPrompt, userPrompt };
}

/**
 * Otimiza prompt para modelos espec√≠ficos
 * @param prompt - Prompt original
 * @param model - Modelo alvo
 * @returns Prompt otimizado para o modelo
 */
export function optimizeForModel(
  prompt: { systemPrompt: string; userPrompt: string },
  model: string
): { systemPrompt: string; userPrompt: string } {
  // AIDEV-SUGGESTION: Otimiza√ß√µes espec√≠ficas por modelo
  
  if (model.includes('claude')) {
    // Claude responde melhor com instru√ß√µes estruturadas
    return {
      ...prompt,
      userPrompt: prompt.userPrompt + '\n\nPor favor, seja detalhado e t√©cnico em sua resposta.'
    };
  }
  
  if (model.includes('gpt')) {
    // GPT prefere instru√ß√µes mais diretas
    return {
      ...prompt,
      systemPrompt: prompt.systemPrompt.replace(/\n\n/g, '\n'),
      userPrompt: prompt.userPrompt.replace(/\n\n/g, '\n')
    };
  }
  
  if (model.includes('mistral') || model.includes('mixtral')) {
    // Mistral funciona melhor com exemplos
    return {
      ...prompt,
      systemPrompt: prompt.systemPrompt + '\n\nSempre forne√ßa exemplos pr√°ticos quando poss√≠vel.'
    };
  }
  
  // Default: retorna sem modifica√ß√µes
  return prompt;
}

/**
 * Valida qualidade do prompt gerado
 * @param prompt - Prompt para validar
 * @returns Valida√ß√£o com score e sugest√µes
 */
export function validatePromptQuality(
  prompt: { systemPrompt: string; userPrompt: string }
): { isValid: boolean; score: number; issues: string[] } {
  const issues: string[] = [];
  let score = 10;
  
  // Verifica tamanho
  const totalLength = prompt.systemPrompt.length + prompt.userPrompt.length;
  if (totalLength > 8000) {
    issues.push('Prompt muito longo, pode ser truncado');
    score -= 2;
  }
  
  // Verifica clareza
  if (!prompt.userPrompt.includes('?') && !prompt.userPrompt.includes(':')) {
    issues.push('Pergunta pouco clara, adicione pontua√ß√£o adequada');
    score -= 1;
  }
  
  // Verifica contexto
  if (!prompt.systemPrompt.includes('CBMEPI') && !prompt.systemPrompt.includes('Corpo de Bombeiros')) {
    issues.push('Falta contexto institucional no system prompt');
    score -= 2;
  }
  
  // Verifica instru√ß√µes
  if (!prompt.userPrompt.includes('Base Legal') && !prompt.userPrompt.includes('cite')) {
    issues.push('Falta instru√ß√£o para citar base legal');
    score -= 1;
  }
  
  return {
    isValid: score >= 7,
    score,
    issues
  };
}

// AIDEV-SUGGESTION: Exporta tipos e enums para uso externo
export { QueryType, EnhancedContext };